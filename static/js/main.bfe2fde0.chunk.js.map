{"version":3,"sources":["Photo.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Photo","props","regular","urls","alt_description","likes","user","name","portfolio_url","medium","profile_image","className","src","alt","href","Loading","App","useState","photos","setPhotos","isLoading","setIsLoading","page","setPage","query","setQuery","clientID","process","fetchPhotos","a","urlPage","urlQuery","url","fetch","response","json","data","oldPhotos","results","console","log","useEffect","event","window","addEventListener","innerHeight","scrollY","document","body","scrollHeight","removeEventListener","type","placeholder","onChange","e","target","value","onClick","preventDefault","map","photo","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qPA6BeA,MA3Bf,SAAeC,GAAQ,IAEbC,EAQLD,EARHE,KAAQD,QACRE,EAOGH,EAPHG,gBACAC,EAMGJ,EANHI,MAJoB,EAUjBJ,EALHK,KACCC,EANmB,EAMnBA,KACAC,EAPmB,EAOnBA,cACiBC,EARE,EAQnBC,cAAiBD,OAGnB,OACC,qBAAIE,UAAU,QAAd,UACC,qBAAKC,IAAKV,EAASW,IAAKT,IACxB,sBAAKO,UAAU,WAAf,UACC,sBAAKA,UAAU,OAAf,UACC,6BAAKJ,IACL,wCAAWF,QAEZ,mBAAGS,KAAMN,EAAT,SACC,qBAAKI,IAAKH,EAAQI,IAAI,SAASF,UAAU,0BChB/BI,MAJf,WACC,OAAO,oBAAIJ,UAAU,UAAd,yBCwGOK,MAtGf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,OAEoBF,oBAAS,GAF7B,mBAEPG,EAFO,KAEIC,EAFJ,OAGUJ,mBAAS,GAHnB,mBAGPK,EAHO,KAGDC,EAHC,OAIYN,mBAAS,IAJrB,mBAIPO,EAJO,KAIAC,EAJA,KAKRC,EAAQ,qBAAiBC,+CAQzBC,EAAW,uCAAG,oCAAAC,EAAA,6DACnBR,GAAa,GAEPS,EAHa,gBAGMR,GACnBS,EAJa,iBAIQP,GAE1BQ,EADGR,EACA,UAZU,2CAYV,OAAkBE,GAAlB,OAA6BI,GAA7B,OAAuCC,GAEvC,UAfQ,oCAeR,OAAgBL,GAAhB,OAA2BI,GARZ,kBAWKG,MAAM,GAAD,OAAID,IAXd,cAWZE,EAXY,iBAYCA,EAASC,OAZV,QAYZC,EAZY,OAclBjB,GAAU,SAACkB,GAEV,OAAIb,GAAkB,IAATF,EACLc,EAAKE,QAGN,GAAN,mBAAWD,GAFDb,EAEV,YAAyBY,EAAKE,SAG9B,YAAyBF,OAG3Bf,GAAa,GA1BK,kDA4BlBkB,QAAQC,IAAR,MACAnB,GAAa,GA7BK,0DAAH,qDA0DjB,OAzBAoB,qBAAU,WACTb,MAEE,CAACN,IAEJmB,qBAAU,WACT,IAAMC,EAAQC,OAAOC,iBAAiB,UAAU,YAE7CxB,GACDuB,OAAOE,YAAcF,OAAOG,SAAWC,SAASC,KAAKC,aAAe,GAEpE1B,GAAQ,SAACD,GACR,OAAa,IAATA,EACI,EAGAA,EAAO,QAKlB,OAAOqB,OAAOO,oBAAoB,SAAUR,KAE1C,IAGF,iCACC,mDACA,yBAAS/B,UAAU,SAAnB,SACC,uBAAMA,UAAU,cAAhB,UACC,uBACCwC,KAAK,OACLxC,UAAU,eACVyC,YAAY,UACZC,SAAU,SAACC,GAAD,OAAO7B,EAAS6B,EAAEC,OAAOC,QACnCA,MAAOhC,IAER,wBAAQb,UAAU,aAAawC,KAAK,SAASM,QA1E5B,SAACH,GACrBA,EAAEI,iBACFnC,GAAQ,kBAAM,MAwEX,SACC,cAAC,IAAD,WAIH,qCACC,qBAAIZ,UAAU,SAAd,UACEO,EAAOyC,KAAI,SAACC,GACZ,OAAO,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,OAG1B,0BAEAzC,GAAa,cAAC,EAAD,WCzFH0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAED1B,SAAS2B,eAAe,SAMzBZ,M","file":"static/js/main.bfe2fde0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Photo(props) {\n\tconst {\n\t\turls: { regular },\n\t\talt_description,\n\t\tlikes,\n\t\tuser: {\n\t\t\tname,\n\t\t\tportfolio_url,\n\t\t\tprofile_image: { medium },\n\t\t},\n\t} = props;\n\treturn (\n\t\t<li className=\"photo\">\n\t\t\t<img src={regular} alt={alt_description} />\n\t\t\t<div className=\"img-info\">\n\t\t\t\t<div className=\"user\">\n\t\t\t\t\t<h4>{name}</h4>\n\t\t\t\t\t<p>Likes: {likes}</p>\n\t\t\t\t</div>\n\t\t\t\t<a href={portfolio_url}>\n\t\t\t\t\t<img src={medium} alt=\"avatar\" className=\"user-avartar\" />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\nexport default Photo;\n","import React from \"react\";\n\nfunction Loading() {\n\treturn <h2 className=\"loading\">Loading...</h2>;\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport Photo from \"../src/Photo\";\nimport Loading from \"../src/Loading\";\n\nfunction App() {\n\tconst [photos, setPhotos] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [page, setPage] = useState(0);\n\tconst [query, setQuery] = useState(\"\");\n\tconst clientID = `?client_id=${process.env.REACT_APP_ACCESS_KEY}`;\n\tconst mainUrl = `https://api.unsplash.com/photos/`;\n\tconst searchUrl = `https://api.unsplash.com/search/photos/`;\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tsetPage(() => 1);\n\t};\n\tconst fetchPhotos = async () => {\n\t\tsetIsLoading(true);\n\t\tlet url;\n\t\tconst urlPage = `&page=${page}`;\n\t\tconst urlQuery = `&query=${query}`;\n\t\tif (query) {\n\t\t\turl = `${searchUrl}${clientID}${urlPage}${urlQuery}`;\n\t\t} else {\n\t\t\turl = `${mainUrl}${clientID}${urlPage}`;\n\t\t}\n\t\ttry {\n\t\t\tconst response = await fetch(`${url}`);\n\t\t\tconst data = await response.json();\n\n\t\t\tsetPhotos((oldPhotos) => {\n\t\t\t\t//when the first time click search handleSubmit will setPage = 1\n\t\t\t\tif (query && page === 1) {\n\t\t\t\t\treturn data.results;\n\t\t\t\t} else if (query) {\n\t\t\t\t\t// after search, scroll down will trigger page 2, we want to return old photo and page 2 photo\n\t\t\t\t\treturn [...oldPhotos, ...data.results];\n\t\t\t\t} else {\n\t\t\t\t\t// when no query we just keep old photo and push new photos into the photo\n\t\t\t\t\treturn [...oldPhotos, ...data];\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetIsLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchPhotos();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [page]);\n\n\tuseEffect(() => {\n\t\tconst event = window.addEventListener(\"scroll\", () => {\n\t\t\tif (\n\t\t\t\t!isLoading &&\n\t\t\t\twindow.innerHeight + window.scrollY >= document.body.scrollHeight - 5\n\t\t\t) {\n\t\t\t\tsetPage((page) => {\n\t\t\t\t\tif (page === 0) {\n\t\t\t\t\t\treturn 2;\n\t\t\t\t\t\t//if page is 0 it default show page 1, if no query and scroll down we want page 2 instead of page 1 again\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn page + 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn window.removeEventListener(\"scroll\", event);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<main>\n\t\t\t<header>PHOTO GALLERY</header>\n\t\t\t<section className=\"search\">\n\t\t\t\t<form className=\"search-form\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"search-input\"\n\t\t\t\t\t\tplaceholder=\"Search \"\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"submit-btn\" type=\"submit\" onClick={handleSubmit}>\n\t\t\t\t\t\t<FaSearch />\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</section>\n\t\t\t<>\n\t\t\t\t<ul className=\"photos\">\n\t\t\t\t\t{photos.map((photo) => {\n\t\t\t\t\t\treturn <Photo key={photo.id} {...photo} />;\n\t\t\t\t\t})}\n\n\t\t\t\t\t<li></li>\n\t\t\t\t</ul>\n\t\t\t\t{isLoading && <Loading />}\n\t\t\t</>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}